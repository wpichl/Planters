{"version":3,"file":"use-window-size.js","sources":["../../node_modules/@react-hook/event/src/index.tsx","../../node_modules/@react-hook/latest/src/index.tsx","../../node_modules/@react-hook/debounce/src/index.tsx","../../node_modules/@react-hook/passive-layout-effect/src/index.tsx","../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport useLayoutEffect from '@react-hook/passive-layout-effect'\nimport useLatest from '@react-hook/latest'\n\nfunction useEvent<\n  T extends Window = Window,\n  K extends keyof WindowEventMap = keyof WindowEventMap\n>(\n  target: Window | null,\n  type: K,\n  listener: WindowEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent<\n  T extends Document = Document,\n  K extends keyof DocumentEventMap = keyof DocumentEventMap\n>(\n  target: Document | null,\n  type: K,\n  listener: DocumentEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent<\n  T extends HTMLElement = HTMLElement,\n  K extends keyof HTMLElementEventMap = keyof HTMLElementEventMap\n>(\n  target: React.RefObject<T> | T | null,\n  type: K,\n  listener: ElementEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent(\n  target: any,\n  type: any,\n  listener: any,\n  cleanup: any = noop\n): void {\n  const storedListener = useLatest(listener)\n  const storedCleanup = useLatest(cleanup)\n\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target\n    if (!targetEl) return\n\n    const listener = function (this: any, ...args: any[]) {\n      storedListener.current.apply(this, args)\n    }\n\n    targetEl.addEventListener(type, listener)\n    const cleanup = storedCleanup.current\n\n    return () => {\n      targetEl.removeEventListener(type, listener)\n      cleanup()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type])\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n\nexport type ElementEventListener<\n  K extends keyof HTMLElementEventMap = keyof HTMLElementEventMap\n> = (this: HTMLElement, ev: HTMLElementEventMap[K]) => any\n\nexport type DocumentEventListener<\n  K extends keyof DocumentEventMap = keyof DocumentEventMap\n> = (this: Document, ev: DocumentEventMap[K]) => any\n\nexport type WindowEventListener<\n  K extends keyof WindowEventMap = keyof WindowEventMap\n> = (this: Document, ev: WindowEventMap[K]) => any\n\nexport default useEvent\n","import * as React from 'react'\n\nconst useLatest = <T extends any>(current: T) => {\n  const storedValue = React.useRef(current)\n  storedValue.current = current\n  return storedValue\n}\n\nexport default useLatest\n","import * as React from 'react'\nimport useLatest from '@react-hook/latest'\n\nexport const useDebounceCallback = <CallbackArgs extends any[]>(\n  callback: (...args: CallbackArgs) => void,\n  wait = 100,\n  leading = false\n): ((...args: CallbackArgs) => void) => {\n  const storedCallback = useLatest(callback)\n  const timeout = React.useRef<ReturnType<typeof setTimeout>>()\n  const deps = [wait, leading, storedCallback]\n  // Cleans up pending timeouts when the deps change\n  React.useEffect(\n    () => () => {\n      timeout.current && clearTimeout(timeout.current)\n      timeout.current = void 0\n    },\n    deps\n  )\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments\n    const {current} = timeout\n    // Calls on leading edge\n    if (current === void 0 && leading) {\n      timeout.current = setTimeout(() => {\n        timeout.current = void 0\n      }, wait)\n      // eslint-disable-next-line prefer-spread\n      return storedCallback.current.apply(null, args as any)\n    }\n    // Clear the timeout every call and start waiting again\n    current && clearTimeout(current)\n    // Waits for `wait` before invoking the callback\n    timeout.current = setTimeout(() => {\n      timeout.current = void 0\n      storedCallback.current.apply(null, args as any)\n    }, wait)\n  }, deps)\n}\n\nexport const useDebounce = <State extends any>(\n  initialState: State | (() => State),\n  wait?: number,\n  leading?: boolean\n): [State, React.Dispatch<React.SetStateAction<State>>] => {\n  const state = React.useState(initialState)\n  return [state[0], useDebounceCallback(state[1], wait, leading)]\n}\n","import * as React from 'react'\n\nconst usePassiveLayoutEffect =\n  React[\n    typeof document !== 'undefined' && document.createElement !== void 0\n      ? 'useLayoutEffect'\n      : 'useEffect'\n  ]\n\nexport default usePassiveLayoutEffect\n","import {useDebounce} from '@react-hook/debounce'\nimport useEvent from '@react-hook/event'\n\nconst emptyObj = {}\n\nexport interface DebouncedWindowSizeOptions {\n  initialWidth?: number\n  initialHeight?: number\n  wait?: number\n  leading?: boolean\n}\n\nconst win = typeof window === 'undefined' ? null : window\nconst getSize = () =>\n  [\n    document.documentElement.clientWidth,\n    document.documentElement.clientHeight,\n  ] as const\n\nexport const useWindowSize = (\n  options: DebouncedWindowSizeOptions = emptyObj\n): readonly [number, number] => {\n  const {wait, leading, initialWidth = 0, initialHeight = 0} = options\n  const [size, setDebouncedSize] = useDebounce<readonly [number, number]>(\n    /* istanbul ignore next */\n    typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize,\n    wait,\n    leading\n  )\n  const setSize = (): void => setDebouncedSize(getSize)\n\n  useEvent(win, 'resize', setSize)\n  useEvent(win, 'orientationchange', setSize)\n\n  return size\n}\n\nexport const useWindowHeight = (\n  options?: Omit<DebouncedWindowSizeOptions, 'initialWidth'>\n): number => useWindowSize(options)[1]\n\nexport const useWindowWidth = (\n  options?: Omit<DebouncedWindowSizeOptions, 'initialHeight'>\n): number => useWindowSize(options)[0]\n"],"names":["useEvent","target","type","listener","cleanup","args","storedListener","current","apply","this","noop","useLatest","storedCleanup","useLayoutEffect","targetEl","addEventListener","removeEventListener","storedValue","React","useDebounceCallback","callback","wait","leading","timeout","clearTimeout","storedCallback","deps","arguments","setTimeout","usePassiveLayoutEffect","document","createElement","emptyObj","win","window","getSize","documentElement","clientWidth","clientHeight","useWindowSize","options","initialWidth","initialHeight","initialState","state","useDebounce","size","setDebouncedSize","setSize"],"mappings":"8OA+BA,SAASA,EACPC,EACAC,EACAC,EACAC,2CAS2CC,2BAAAA,kBACvCC,EAAeC,QAAQC,MAAMC,KAAMJ,YAVvCD,IAAAA,EAAeM,OAETJ,EAAiBK,EAAUR,GAC3BS,EAAgBD,EAAUP,GAEhCS,GAAgB,eACRC,EAAWb,GAAU,YAAaA,EAASA,EAAOM,QAAUN,KAC7Da,OAECX,IAINW,EAASC,iBAAiBb,EAAMC,OAC1BC,EAAUQ,EAAcL,eAEvB,WACLO,EAASE,oBAAoBd,EAAMC,GACnCC,QAGD,CAACH,EAAQC,IAId,SAASQ,KC1DT,IAAMC,EAAY,SAAgBJ,OAC1BU,EAAcC,SAAaX,UACjCU,EAAYV,QAAUA,EACfU,GCFIE,EAAsB,SACjCC,EACAC,EACAC,gBAQIC,EAAQhB,SAAWiB,aAAaD,EAAQhB,SACxCgB,EAAQhB,aAAU,eAYhBgB,EAAQhB,aAAU,WAtBxBc,IAAAA,EAAO,cACPC,IAAAA,EAAU,OAEJG,EAAiBd,EAAUS,GAC3BG,EAAUL,WACVQ,EAAO,CAACL,EAAMC,EAASG,UAE7BP,aACE,sBAIAQ,GAGKR,eAAkB,eAEjBb,EAAOsB,UACNpB,EAAWgB,EAAXhB,gBAES,IAAZA,GAAsBe,SACxBC,EAAQhB,QAAUqB,aAEfP,GAEII,EAAelB,QAAQC,MAAM,KAAMH,GAG5CE,GAAWiB,aAAajB,GAExBgB,EAAQhB,QAAUqB,YAAW,WAC3BL,EAAQhB,aAAU,EAClBkB,EAAelB,QAAQC,MAAM,KAAMH,KAClCgB,KACFK,ICrCCG,EACJX,EACsB,oBAAbY,eAAuD,IAA3BA,SAASC,cACxC,kBACA,aCHFC,EAAW,GASXC,EAAwB,oBAAXC,OAAyB,KAAOA,OAC7CC,EAAU,iBACd,CACEL,SAASM,gBAAgBC,YACzBP,SAASM,gBAAgBE,eAGhBC,EAAgB,SAC3BC,YAAAA,IAAAA,EAAsCR,SAEuBQ,EAAtDnB,IAAAA,KAAMC,IAAAA,YAASmB,aAAAA,aAAe,QAAGC,gBFoBf,SACzBC,EACAtB,EACAC,OAEMsB,EAAQ1B,WAAeyB,SACtB,CAACC,EAAM,GAAIzB,EAAoByB,EAAM,GAAIvB,EAAMC,IEzBrBuB,CAEX,oBAAbf,SAA2B,CAACW,aAHmB,KAGYN,EAClEd,EACAC,GAJKwB,OAAMC,OAMPC,EAAU,kBAAYD,EAAiBZ,WAE7CnC,EAASiC,EAAK,SAAUe,GACxBhD,EAASiC,EAAK,oBAAqBe,GAE5BF,qBAGsB,SAC7BN,UACWD,EAAcC,GAAS,uCAEN,SAC5BA,UACWD,EAAcC,GAAS"}